/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quanly;


import java.awt.Desktop;
import java.awt.Image;
import java.awt.image.*;
import java.io.*;
import java.nio.file.Files;
import java.sql.*;
import java.text.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;



import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Admin
 */
public class frmNhanVien extends javax.swing.JFrame {

    private SimpleDateFormat dcn = new SimpleDateFormat("yyyy/MM/dd");
    private String text;
    private String sMaSV;
    private String imgPathString=null;
    private String imgPathStringtmp=null;
    File resFile=null;
    File desFile = null;
    public frmNhanVien() {
        initComponents();
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        dateBirthday = new com.toedter.calendar.JDateChooser();
        txtPhone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaCountryside = new javax.swing.JTextArea();
        txtCMND = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        imgAvatar = new javax.swing.JLabel();
        btnChooseImg = new javax.swing.JButton();
        cbbStatus = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExportData = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        rbtnNu = new javax.swing.JRadioButton();
        rbtnNam = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNV = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        cbbCV = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Consolas", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 51));
        jLabel1.setText("Quản Lý Nhân Viên");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Họ Tên: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Ngày Sinh(/): ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Số điện thoại: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Quê Quán: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("CMND: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Hình ảnh: ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Trạng Thái: ");

        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dateBirthday.setDateFormatString("dd/MM/yyyy");
        dateBirthday.setMaxSelectableDate(new java.util.Date(1356976913000L));
        dateBirthday.setMinSelectableDate(new java.util.Date(-21487000L));

        txtPhone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtAreaCountryside.setColumns(20);
        txtAreaCountryside.setRows(5);
        jScrollPane1.setViewportView(txtAreaCountryside);

        txtCMND.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnChooseImg.setText("Chọn Ảnh");
        btnChooseImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(imgAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btnChooseImg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnChooseImg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(imgAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức Năng"));

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Xoá");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnExportData.setText("Xuất dữ liệu");
        btnExportData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportDataActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnAdd)
                .addGap(28, 28, 28)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnExportData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch)
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnExportData)
                    .addComponent(btnSearch)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Giới tính:");

        buttonGroup1.add(rbtnNu);
        rbtnNu.setText("Nữ");

        buttonGroup1.add(rbtnNam);
        rbtnNam.setSelected(true);
        rbtnNam.setText("Nam");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtnNam, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(rbtnNu, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnNu)
                    .addComponent(rbtnNam))
                .addContainerGap())
        );

        jScrollPane3.setHorizontalScrollBar(null);

        tbNV.setForeground(new java.awt.Color(255, 0, 0));
        tbNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNVMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbNV);

        jScrollPane3.setViewportView(jScrollPane2);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Chức Vụ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(txtPhone)
                    .addComponent(dateBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtName)
                    .addComponent(txtCMND)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbCV, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(dateBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(cbbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(cbbCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void LoadData(){
         try {
                Connection Conn = ConnectDB.getSQLServerConnection();
                Statement st = Conn.createStatement();
                Statement st1 = Conn.createStatement();
                tbNV.removeAll();
                cbbCV.removeAll();
                cbbStatus.removeAll();
                String sql = String.format("SELECT dbo.tbl_NhanVien.sMaNV, dbo.tbl_NhanVien.sHoTen, dbo.tbl_NhanVien.sGioiTinh, dbo.tbl_NhanVien.dNgaySinh, dbo.tbl_NhanVien.nSDT, dbo.tbl_NhanVien.sQueQuan, dbo.tbl_NhanVien.sHinhAnh, dbo.tbl_NhanVien.nCMND,dbo.tbl_TrangThai.sTenTrangThai, dbo.tbl_ChucVu.sTenCV FROM dbo.tbl_TrangThai INNER JOIN dbo.tbl_NhanVien ON dbo.tbl_TrangThai.iMaTT = dbo.tbl_NhanVien.FK_iMaTT INNER JOIN dbo.tbl_ChucVu ON dbo.tbl_NhanVien.sMaCV = dbo.tbl_ChucVu.sMaCV");
                ResultSet rs = st.executeQuery(sql);
                DefaultTableModel model = new DefaultTableModel();
                model.setColumnCount(0);
                model.setRowCount(0);
                String []a ={"Mã Nhân Viên","Họ Tên","Giới Tính","Ngày Sinh","SDT","Quê Quán","Hinh Anh","CMND","Trạng Thái","Chức Vụ"};
                model.setColumnIdentifiers(a);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString(1));
                    v.add(rs.getString(2));
                    if(rs.getInt(3)==1){v.add("Nam");}
                    else v.add("Nữ");
                    v.add(rs.getString(4));
                    v.add(rs.getString(5));
                    v.add(rs.getString(6));
                    v.add(rs.getString(7));
                    v.add(rs.getString(8));
                    v.add(rs.getString(9));
                    v.add(rs.getString(10));
                    model.addRow(v);
                }
                tbNV.setModel(model);
                String sql1 = String.format("SELECT iMaTT, sTenTrangThai FROM tbl_TrangThai WHERE sBang='NhanVien'");
                ResultSet rs1 = st1.executeQuery(sql1);
                while (rs1.next()) {
                    cbbStatus.addItem(rs1.getString(2));
                }
                String sql2 = String.format("SELECT sMaCV, sTenCV FROM tbl_ChucVu");
                ResultSet rs2 = st1.executeQuery(sql2);
                while (rs2.next()) {
                    cbbCV.addItem(rs2.getString(2));
                }
//                 if (CheckString!=null) {
//                    JOptionPane.showMessageDialog(null, "Login Successfully","Thông báo", 1);
//                 }else JOptionPane.showMessageDialog(null, "Login Failues","Thông báo", 1);
            } catch (Exception e) {
                System.out.println(e);
            } 
    }
    private boolean CheckData(){
        boolean check=true;
        text="";
        if(txtName.getText().length()<5){
            check= false;
            text="Tên, ";
        }
//        if(txtPhone.getText().length()<8&&txtPhone.getText().length()>13){
//            check= false;
//            text+="Số điện thoại, ";
//        }
        String reg = "^(0|\\+84)(\\s|\\.)?((3[2-9])|(5[689])|(7[06-9])|(8[1-689])|(9[0-46-9]))(\\d)(\\s|\\.)?(\\d{3})(\\s|\\.)?(\\d{3})$";

        // Kiem tra dinh dang
        boolean kt = txtPhone.getText().matches(reg);

        if (kt == false) {
            check= false;
            text+="Số điện thoại, ";
        }
        if(txtAreaCountryside.getText().length()<5){
            check= false;
            text+="Quê quán, ";
        }
        if(txtCMND.getText().length()<8){
            check= false;
            text+="CMND, ";
        }
        if(dateBirthday.getDate()==null){
            check= false;
            text+="Ngày sinh ";
        }
        
        return check;
    }
    private void Them(Connection c,Statement s){
        int a=0;
        try {
            s = c.createStatement();
            boolean gender=false;
            String date=null;
            if (rbtnNam.isSelected()) {
                gender=true;
            }
            try {
            SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
            date = dcn.format(dateBirthday.getDate() );
            } catch (Exception e) {
            }
            //System.out.println(sqlString);
            if (imgPathString!=null) {
                try {
                    imgPathString="D:\\ki1_nam4\\JAVA_AD\\QuanLy\\"+desFile.toPath();
                    String sqlString=String.format("INSERT INTO tbl_NhanVien(sHoTen, sGioiTinh, dNgaySinh, nSDT, sQueQuan, sHinhAnh, nCMND, FK_iMaTT, sMaCV) VALUES(N'%s',N'%s',N'%s',N'%s',N'%s',N'%s',N'%s',(SELECT iMaTT FROM tbl_TrangThai WHERE sTenTrangThai=N'%s' AND sBang='NhanVien'),(SELECT sMaCV FROM tbl_ChucVu WHERE sTenCV=N'%s'))",txtName.getText(),gender,date,txtPhone.getText(),txtAreaCountryside.getText(),imgPathString,txtCMND.getText(),cbbStatus.getSelectedItem(),cbbCV.getSelectedItem());
                    a= s.executeUpdate(sqlString);
                    Files.copy(resFile.toPath(), desFile.toPath());
                    imgPathString=null;
                } catch (IOException ex) {
                    Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                try {
                    String sqlString=String.format("INSERT INTO tbl_NhanVien(sHoTen, sGioiTinh, dNgaySinh, nSDT, sQueQuan, sHinhAnh, nCMND, FK_iMaTT, sMaCV) VALUES(N'%s',N'%s',N'%s',N'%s', N'%s',N'D:\\ki1_nam4\\JAVA_AD\\QuanLy\\avatar.jpg', N'%s',(SELECT iMaTT FROM tbl_TrangThai WHERE sTenTrangThai=N'%s' AND sBang='NhanVien'),(SELECT sMaCV FROM tbl_ChucVu WHERE sTenCV=N'%s'))",txtName.getText(),gender,date,txtPhone.getText(),txtAreaCountryside.getText(),txtCMND.getText(),cbbStatus.getSelectedItem(),cbbCV.getSelectedItem());
                    a= s.executeUpdate(sqlString);
                } catch (Exception ex) {
                    System.out.println(ex);
                }
            }
            LoadData();
        } catch (Exception e) {
            System.out.println(e);
        }
        System.out.println(a);
        if(a>0){
            JOptionPane.showMessageDialog(null, "Thêm bản ghi thành công","Thông báo", 1);
            LoadData();
        }
        else JOptionPane.showMessageDialog(null, "Thêm bản ghi thất bại","Thông báo", 1);
    }
    private void Sua(Connection c,Statement s){
        int a=0;
        try {
            s = c.createStatement();
            boolean gender=false;
            String date=null;
            if (rbtnNam.isSelected()) {
                gender=true;
            }
            try {
            SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
            date = dcn.format(dateBirthday.getDate() );
            } catch (Exception e) {
            }
            if (imgPathString!=null) {
                try {
                    String sqlString=String.format("UPDATE tbl_NhanVien SET sHoTen = N'%s', sGioiTinh = N'%s', dNgaySinh = N'%s', nSDT = N'%s', sQueQuan = N'%s', sHinhAnh = N'%s', nCMND = N'%s', FK_iMaTT = (SELECT iMaTT FROM tbl_TrangThai WHERE sTenTrangThai=N'%s' AND sBang='NhanVien'), sMaCV = (SELECT sMaCV FROM tbl_ChucVu WHERE sTenCV=N'%s') WHERE sMaNV='%s'",txtName.getText(),gender,date,txtPhone.getText(),txtAreaCountryside.getText(),imgPathString,txtCMND.getText(),cbbStatus.getSelectedItem(),cbbCV.getSelectedItem(),sMaSV);
                    a= s.executeUpdate(sqlString);
                    Files.copy(resFile.toPath(), desFile.toPath());
                    imgPathStringtmp="D:\\ki1_nam4\\JAVA_AD\\QuanLy\\"+desFile.toPath();
                } catch (IOException e) {
                     Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, e);
                }
            }
            else{
                try {
                    String sqlString=String.format("UPDATE tbl_NhanVien SET sHoTen = N'%s', sGioiTinh = N'%s', dNgaySinh = N'%s', nSDT = N'%s', sQueQuan = N'%s', sHinhAnh = N'%s', nCMND = N'%s', FK_iMaTT = (SELECT iMaTT FROM tbl_TrangThai WHERE sTenTrangThai=N'%s' AND sBang='NhanVien'), sMaCV = (SELECT sMaCV FROM tbl_ChucVu WHERE sTenCV=N'%s') WHERE sMaNV='%s'",txtName.getText(),gender,date,txtPhone.getText(),txtAreaCountryside.getText(),imgPathStringtmp,txtCMND.getText(),cbbStatus.getSelectedItem(),cbbCV.getSelectedItem(),sMaSV);
                    a= s.executeUpdate(sqlString);
                } catch (Exception ex) {
                    System.out.println(ex);
                }
            }
            LoadData();
        } catch (Exception e) {
            System.out.println(e);
        }
        System.out.println(a);
        if(a>0){
            JOptionPane.showMessageDialog(null, "Cập nhật bản ghi thành công","Thông báo", 1);
            LoadData();
        }
        else JOptionPane.showMessageDialog(null, "Cập nhật bản ghi thất bại","Thông báo", 1);
    }
    private void Xoa(Connection c,Statement s){
        int a=0;
        try {
            s = c.createStatement();
            String sqlString=String.format("DELETE tbl_NhanVien WHERE sMaNV = '%s'",sMaSV);
            a= s.executeUpdate(sqlString);
            LoadData();
        } catch (Exception e) {
            System.out.println(e);
        }
        if(a>0){
            JOptionPane.showMessageDialog(null, "Xoá thành công","Thông báo", 1);
            LoadData();
        }
        else JOptionPane.showMessageDialog(null, "Xoá thất bại","Thông báo", 1);
    }
    private void openFile(String file){
        try {
            File filePath =new  File(file);
            Desktop.getDesktop().open(filePath);
        } catch (IOException e) {
            System.out.println(e);
        }
    }
    private void exportExcel(JTable jt){
        try {
            JFileChooser chooser =new JFileChooser();
            chooser.showSaveDialog(jt);
            File saveFile = chooser.getSelectedFile();
            if (saveFile !=null) {
                saveFile = new File(saveFile.toString()+".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("test");
                Row rowColumn = sheet.createRow(0);
                for(int i=0;i<jt.getColumnCount();i++){
                    Cell cell = rowColumn.createCell(i);
                    cell.setCellValue(jt.getColumnName(i));
                }
                for (int j = 0; j < jt.getRowCount(); j++) {
                    Row row = sheet.createRow(j+1);
                    for (int k = 0; k < jt.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (jt.getValueAt(j, k)!=null) {
                            cell.setCellValue(jt.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
            }
            else{
                JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi!");
            }
        } 
        catch(FileNotFoundException e){
            System.out.println(e);
        }
        catch (IOException io) {
            System.out.println(io);
        }
    }
    private void btnChooseImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImgActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            try {
                BufferedImage img = null;
                img = ImageIO.read(new File(file.getAbsolutePath()));
                System.out.println(file.getAbsolutePath());
                Image img1 = img.getScaledInstance(imgAvatar.getWidth(), imgAvatar.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon format = new ImageIcon(img1);
                imgAvatar.setIcon(format);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e,"ERROR",JOptionPane.ERROR_MESSAGE);
            }
            
            String fileName =file.getAbsolutePath();
            String newPath ="img/img.ProfileImg";
            File diFile = new File(newPath);
            if(!diFile.exists()){
                diFile.mkdirs();
            }
            Random generator= new Random();
            int value1 = generator.nextInt(999999999) + 1;
            int value = generator.nextInt(999999999) + 1;
            String extension =fileName.substring(fileName.lastIndexOf('.')+1);
            resFile = new File(fileName);
            desFile = new File(newPath+"/"+(value*value1)+"."+extension);
            imgPathString="D:\\ki1_nam4\\JAVA_AD\\QuanLy\\"+desFile.toPath();
//            try {
//                Files.copy(resFile.toPath(), desFile.toPath());
//                imgPathString="D:\\ki1_nam4\\JAVA_AD\\QuanLy\\"+desFile.toPath();
//            } catch (IOException ex) {
//                Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
//            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnChooseImgActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            if(CheckData()){
                try {
                    Connection c = ConnectDB.getSQLServerConnection();
                    Statement s = c.createStatement();
                    Them(c, s);
                    c.close();
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
            else{
               JOptionPane.showMessageDialog(null, text+" chưa chính xác!","Thông báo", 1); 
            }
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void tbNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNVMouseClicked
        DefaultTableModel model = (DefaultTableModel)tbNV.getModel();
        int row = tbNV.getSelectedRow();
        //System.out.println(row);
        sMaSV=tbNV.getModel().getValueAt(row, 0).toString();
        txtName.setText(tbNV.getModel().getValueAt(row, 1).toString());
        if(tbNV.getModel().getValueAt(row, 2).toString()=="Nam"){
            rbtnNam.setSelected(true);
        }
        else{
            rbtnNu.setSelected(true);
        }
        try {
           Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(row, 3));
           dateBirthday.setDate(date);
        } catch (ParseException ex) {
           //dateBirthday.setDate('1/1/2001');
           Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtPhone.setText(tbNV.getModel().getValueAt(row, 4).toString());
        txtAreaCountryside.setText(tbNV.getModel().getValueAt(row, 5).toString());
        BufferedImage img = null;
        imgPathString=null;
        try {
                img = ImageIO.read(new File(tbNV.getModel().getValueAt(row, 6).toString()));
                Image img1 = img.getScaledInstance(imgAvatar.getWidth(), imgAvatar.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon format = new ImageIcon(img1);
                imgAvatar.setIcon(format);
                imgPathStringtmp=tbNV.getModel().getValueAt(row, 6).toString();
        } 
        catch (Exception e) {
                //JOptionPane.showMessageDialog(null, e,"ERROR",JOptionPane.ERROR_MESSAGE);
                ImageIcon imageIcon = new ImageIcon(new ImageIcon("D:\\\\ki1_nam4\\\\JAVA_AD\\\\QuanLy\\\\img\\\\img.ProfileImg\\\\avatar.jpg").getImage().getScaledInstance(229, 112, Image.SCALE_DEFAULT));
                imgAvatar.setIcon(imageIcon);
                imgPathString="D:\\\\ki1_nam4\\\\JAVA_AD\\\\QuanLy\\\\img\\\\img.ProfileImg\\\\avatar.jpg";
//                Image img1 = img.getScaledInstance(imgAvatar.getWidth(), imgAvatar.getHeight(), Image.SCALE_SMOOTH);
//                ImageIcon format = new ImageIcon("D:\\ki1_nam4\\JAVA_AD\\QuanLy\\img\\img.ProfileImg\\avatar.jpg");
//                imgAvatar.setIcon(format);
        }
        txtCMND.setText(tbNV.getModel().getValueAt(row, 7).toString());
        cbbStatus.setSelectedItem(tbNV.getModel().getValueAt(row, 8).toString());
        cbbCV.setSelectedItem(tbNV.getModel().getValueAt(row, 9).toString());
    }//GEN-LAST:event_tbNVMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            int row = tbNV.getSelectedRow();
            if (row!=-1) {
                if(CheckData()){
                    try {
                        Connection c = ConnectDB.getSQLServerConnection();
                        Statement s = c.createStatement();
                        Sua(c, s);
                        c.close();
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }
                else{
                   JOptionPane.showMessageDialog(null, text+" chưa chính xác!","Thông báo", 1); 
                }  
            }
            else{
                JOptionPane.showMessageDialog(null, "Chưa chọn bản ghi","Thông báo", 1);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int row = tbNV.getSelectedRow();
            if (row!=-1) {
                if(JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xoá bản ghi có mã: "+sMaSV, "Thông báo", JOptionPane.OK_CANCEL_OPTION) == 0){
                    try {
                        Connection c = ConnectDB.getSQLServerConnection();
                        Statement s = c.createStatement();
                        Xoa(c, s);
                        c.close();
                    } catch (Exception e) {
                        System.out.println(e);
                    }  
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Chưa chọn bản ghi muốn xoá","Thông báo", 3);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExportDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportDataActionPerformed
        
        exportExcel(tbNV);
    }//GEN-LAST:event_btnExportDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChooseImg;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExportData;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbCV;
    private javax.swing.JComboBox<String> cbbStatus;
    private com.toedter.calendar.JDateChooser dateBirthday;
    private javax.swing.JLabel imgAvatar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton rbtnNam;
    private javax.swing.JRadioButton rbtnNu;
    private javax.swing.JTable tbNV;
    private javax.swing.JTextArea txtAreaCountryside;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
